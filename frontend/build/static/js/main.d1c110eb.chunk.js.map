{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/person.js","components/SucNotifications.js","components/FailNotification.js","App.js","index.js"],"names":["Filter","props","value","filter","onChange","handleFilter","PersonForm","onSubmit","addPerson","newName","nameChange","newNumber","numberChange","className","type","Persons","person","name","number","onClick","handleClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","SucNotification","message","FailNotification","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","errorMessage","setErrorMessage","sucMessage","setSucMessage","useEffect","personService","initialPersons","personsToShow","toLowerCase","includes","event","target","preventDefault","personObject","some","window","confirm","find","p","changedPerson","returnedPerson","map","setTimeout","catch","error","concat","console","log","object","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1c110eb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => <div>filter shown with <input value={props.filter} onChange={props.handleFilter}/></div>\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.addPerson}>\r\n            <div>\r\n                name: <input value={props.newName} onChange={props.nameChange} />\r\n            </div>\r\n            <div>\r\n                number: <input value={props.newNumber} onChange={props.numberChange} />\r\n            </div>\r\n            <div>\r\n                <button className=\"button\" type=\"submit\">add</button>\r\n            </div>\r\n      </form>\r\n      </div >\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = (props) => {\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <p>\r\n                {props.person.name} {props.person.number}\r\n                <button className=\"button\" onClick={props.handleClick}>delete</button>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst toDelete = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response)\r\n}\r\n\r\nexport default {getAll, create, update, toDelete}","import React from 'react'\r\n\r\nconst SucNotification = ({message}) => {\r\nif(message === null){\r\n    return null\r\n}\r\n\r\nreturn(\r\n    <div className=\"success\">\r\n        {message}\r\n    </div>\r\n)\r\n}\r\n\r\nexport default SucNotification","import React from 'react'\r\n\r\nconst FailNotification = ({message}) => {\r\nif(message === null) {\r\n    return null\r\n}\r\n\r\nreturn (\r\n    <div className='fail'>\r\n        {message}\r\n    </div>\r\n)\r\n}\r\n\r\nexport default FailNotification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/person'\nimport SucNotification from './components/SucNotifications'\nimport FailNotification from './components/FailNotification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('Martin Fowler')\n  const [newNumber, setNewNumber] = useState('040-1234567')\n  const [filter, setFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [sucMessage, setSucMessage] = useState(null)\n\n  useEffect(() => {\n    personService.getAll()\n      .then(initialPersons =>\n        setPersons(initialPersons))\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    const found = persons.some(person => person.name === newName)\n\n\n    if (found === true) {\n      if (window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one`)) {\n        const person = persons.find(p => p.name === newName)\n        const changedPerson = { ...person, number: newNumber }\n        personService.update(changedPerson.id, personObject)\n          .then(returnedPerson => {\n            setPersons(persons.map(p => p.name !== newName ? p : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            setSucMessage(`Updated ${newName}`)\n            setTimeout(()=> {\n              setSucMessage(null)\n            },5000)\n          })\n          .catch(error => {\n            setErrorMessage(`Information of ${newName} has already been removed from the server`)\n            setTimeout(()=> {\n              setErrorMessage(null)\n            }, 5000)\n          })\n      } else {\n        setNewName('')\n        setNewNumber('')\n      }\n    }\n    else {\n      personService.create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setSucMessage(`Added ${newName}`)\n          setTimeout(()=> {\n            setSucMessage(null)\n          },5000)\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          setErrorMessage(error.response.data.error)\n        })\n    }\n  }\n\n\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleDelete = (object) => {\n    if (window.confirm(`Delete ${object.name}?`)) {\n      personService.toDelete(object.id)\n        .then( response => {\n          setPersons(persons.filter(p => p.id !== object.id))\n          setSucMessage(`Deleted ${object.name}`)\n        })\n        .catch(error => {\n          setErrorMessage(`Information of ${object.name} has already been removed from the server`)\n          setTimeout(()=> {\n            setErrorMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(filter))\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SucNotification message={sucMessage}/>\n      <FailNotification message={errorMessage}/>\n      <Filter filter={filter} handleFilter={handleFilterChange} />\n\n      <div>\n        <h2>add a new</h2>\n      </div>\n\n      <PersonForm addPerson={addPerson} newName={newName}\n        nameChange={handleNameChange} newNumber={newNumber}\n        numberChange={handleNumberChange} />\n\n      <h2>Numbers</h2>\n      {personsToShow.map(person =>\n        <Persons key={person.id} person={person} handleClick={() => handleDelete(person)} />\n      )}\n    </div>\n  )\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport CSS from './index.css'\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}